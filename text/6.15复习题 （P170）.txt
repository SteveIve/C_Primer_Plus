1. 写出执行完下列各行后quack的值是多少。后5行中使用的是前一行生成的quack的值。
	int quack = 2;
	quack += 5;
	quack *= 10;
	quack -= 6;
	quack /= 8;
	quack %=3;

	7， 70， 63， 7， 2

答案： 2， 7， 70， 64， 8， 2


2. 假设value是int类型，下面循环的输出是什么？
	for ( value = 36; value >0; value /=2 )
		printf("%3d", value );
	如果value是double类型，会出现什么问题？

	输出：" 36 18  9  4  2  1"
	如果value是double类型，会让输出包括很多小数。

答案：
	该循环的输出是：
	36 18 9  4  2  1
	如果value是double类型，即使value小于1，循环的测试条件仍然为真。循环将一直执行，知道浮点数下溢生成0为止。另外，value是double类型时，%3d转换说明也不正确。


3. 用代码表示以下测试条件：
	a. x大于5
	b. 是scanf() 读取一个名为x的double类型且失败
	c. x的值等于5

	a. x > 5;
	b. scanf("%lf", &x) ==0;
	c. x == 5;

答案：
	a. 略
	b. scanf("%lf", &x) != 1
	c. 略


4. 用代码表示以下测试条件：
	a. scanf（）成功读入一个整数
	b. x不等于5；
	c. x大于或等于20；

	a. scanf("%d", &x) == 1;
	b. x !=5;
	c. x>=20;
答案：略



5. 下面的程序有点问题，请找出问题所在：
	#include <stdio.h>
	int main(void)
	{
		int i, j, list(10);
		
		for (i = 1, i<=10, i++)
		{
			list[i] = 2*i +3;
			for (j = 1, j >= i, j++)
				printf(" %d", list[j]  );
			printf("\n");
	}

	问题：定义变量里，list后应为[ ]，第一个for循环里三个语句应该用分号；隔开，第二个for循环也是，少一个大括号，没有return 语句
	改：
	#include <stdio.h>
	int main(void)
	{
		int i, j, list[10];
		
		for (i = 1; i<= 10; i++)
		{
			list[i] = 2 * i + 3;
			for ( j = 1; j >= i ; j++)
				printf(" %d", list [j] );
			printf("\n");
		}
		return 0;
	}

答案： 
	第4行：应该是list[10]
	第6行：逗号改为分号。 i的范围应该是0~9，不是1~10。
	第9行：逗号改为分号。>=改为<=，否则，当i = 1时，该循环将成为无限循环。
	第10行：在第10行和第11行之间少了一个右花括号。该花括号与第7行的左花括号配对，形成一个for循环块。然后再这个右花括号与最后一个右花括号之间，少了一行return 0;。
	下面是一个正确的版本：
#include <stdio.h>
int main(void)
{
	int i, j, list[10];

	for (i = 1; i <=9; i++)
	{
		list[i] = 2 * i + 3;
		for (j = 1; j <= i; j++)
			printf("%d", list[j]);
		printf("\n");
	}
	
	return 0;
}

//答案有错，此为自己修改。
//应该不会有错了..



6. 编写一个程序打印下面的图案，要求使用嵌套循环：
	$$$$$$$$
	$$$$$$$$
	$$$$$$$$
	$$$$$$$$

#include <stdio.h>
int main(void)
{
	int i,j;
	char money = '$';

	for (i = 1; i<5; i++)
	{
		for (j=1; j<9; j++)
		{
			printf("$");
		}
		printf("\n");
	}
	return 0;
}

答案： 
	下面是一种方法：

#include <stdio.h>
int main(void)
{
	int col, row; 
	
	for (row = 1; row <=4; row++)
	{
		for (col = 1; col <= 8; col++)
			printf("$");
		printf("\n");
	}
	return 0;
}



7. 下面的程序各打印什么内容？
	a. 
	#include <stdio.h>
	int main(void)
	{
		int i = 0;

		while (++i <4)
			printf("Hi! ");
		do
			printf("Bye! ");
		while (i++<8);
		return 0;
	}

	b. 
	#include <stdio.h>
	int main(void)
	{
		int i;
		char ch;
		for (i =0, ch = ' A'; i<4; i++, ch +=2*i )
			printf("%c", ch);
		return 0;
	}

	a. Hi! Hi! Hi! Bye!		b. ACHP

答案：
	a. Hi! Hi! Hi! Bye! Bye! Bye! Bye! Bye!
	b. ACGM (因为代码中把int类型值与char类型值相加，编译器可能警告会损失有效数字）




8. 假设用户输入的是Go west, young man! , 下面各程序的输出是什么？（在ASCII码中，！紧跟在空格字符后面）

a.
#include <stdio.h>
int main(void)
{
	char ch;
	
	scanf("%c", &ch);
	while (ch != 'g')
	{
		printf("%c", ch);
		scanf("%c", &ch);
	}
	return 0;
}

b. 
#include <stdio.h>
int main(void)
{
	char ch;

	scanf("%c", &ch);
	while (ch != 'g')
	{
		printf("%c", ++ch);
		scanf("%c", &ch);
	}
	return 0;
}

c. 
#include <stdio.h>
int main(void)
{
	char ch;
	
	do {
		scanf("%c", &ch);
		printf("%c", ch);
	} while (ch != 'g');
	return 0;
}

d. 
#include <stdio.h>
int main(void)
{
	char ch;
	
	scanf("%c", &ch);
	for (ch = '$'; ch != 'g'; scanf("%c", &ch) )
		printf("%c", ch);
	return 0;
}

	a. Go west, youn	b. Hp!xftu-!zpvo	c. Go west, young	d. Go west, youn

答案： 
	a~c: 略	d. $o west, youn

9. 下面的程序打印什么内容？
#include <stdio.h>
int main(void)
{
	int n, m;

	n = 30;
	while (++n <= 33)
		printf("%d|", n);

	n = 30;
	do 
		printf("%d|", n);
	while (++n<= 33);

	printf("\n***\n");
	
	for (n = 1; n*n < 200; n += 4)
		printf("%d\n",n);
	
	printf("n***n");
	
	for (n = 2, m = 6; n<m; n*= 2, m += 2)
		printf("%d %d\n", n, m);
	
	printf("\n***\n");
	
	for (n = 5; n> 0; n --）
	{
		for (m = 0; m<=n; m++)
			printf("=");
		printf("\n");
	}
	return 0;
}

打印内容：
31|32|33|30|31|32|33|34
***
1
5
9
13
***
2 6
4 8
8 10
16 12
***
======
=====
====
===
==
=

答案：
其输入如下：
31|32|33|30|31|32|33|
***
1
5
9
13

***
2 6
4 8
8 10

***
======
=====
====
===
==


10. 考虑下面的声明：double mint[10];
	a. 数组名是什么
	b. 该数组有多少个元素？
	c. 每个元素可以储存什么类型的值？
	d. 下面的哪一个scanf( ) 的用法正确？
		i. scanf("%lf", mint[2])
		ii. scanf("%lf", &mint[2])
		iii. scnaf("%lf", &mint)

	a. 数组名是mint	b. 有10个元素	c. 可以储存长类型的数值	d. ii的scanf( ) 的用法正确

答案: 
	c. 可以储存double类型的值


11. Noah先生喜欢以2计数，所以编写了下面的程序，创建了一个储存2、4、6、8等数字的数组。这个程序是否有错误之处？如果有，请指出。
#include <stdio.h>
#define SIZE 8
int main(void)
{
	int by_twos [SIZE];
	int index;
	
	for (index = 1; index<=SIZE; index++)
		by_twos [index] = 2 * index;
	for (index = 1; index <= SIZE; index++)
		printf("%d", by_twos);
	printf("\n");
	return 0;
}


有，输出数组时应为以下：
for (index = 1; index <= SIZE; index++)
	printf("%d", by_twos[index]);

答案： 
	因为第1个元素的索引是0，所以循环的范围应该是0~SIZE-1，而不是1~SIZE。但是，在如果只是这样更改会导致赋给第1个元素的值是0，而不是2。所以，应重写这个循环。
	for (index = 0; index < SIZE; index++)
		by_twos[index] = 2 * (index +1);
	与此类似，第2个循环的范围也要更改。另外，应该在数组名后面使用数组索引。
	for (index = 0; index < SIZE; index++)
		printf("%d ", by_twos[index];
	错误的循环条件会成为程序的定时炸弹。程序可能开始运行良好，但是由于数据被放在错误的位置，可能在某一时刻导致程序不能正常工作。
	

12. 假设要编写一个返回long类型值的函数，函数定义中应包含什么？
double function(parameter)

答案：
	该函数声明返回类型为long，并包含一个返回long类型值的return语句。




13. 定义一个函数，接受一个int 类型的参数，并以long类型返回参数的平方值。

long change_to_long( (int)number)
{
	double changed;

	changed = number * number;
	return change;
}


答案：
	把num的类型强制转换程long类型，确保计算使用long类型而不是int类型。在int为16位的系统中，两个int类型值的乘积在返回之前会被截断为一个int类型的值，这可能会丢失数据。
	long square(in num)
	{
		return ((long) num) * num;
	}




14. 下面的程序打印什么内容？
#include <stdio.h>
int main(void)
{
	int k; 
	for (k = 1, printf("%d": Hi!\n", k); printf("k = %d\n", k), k*k < 26; k+=2, printf("Now k is %d\n", k)
		printf("k is %d in the loop\n", k);
	return 0;
}

输出内容如下：
1: Hi!
k = 1
k is 1 in the loop
Now k is 3
k = 3
k is 3 in the loop
Now k is 5
k = 5
k is 5 in the loop
Now k is 7
k = 7

答案：略
















