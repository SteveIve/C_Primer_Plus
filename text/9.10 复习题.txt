1. 实际参数和形式参数的区别是是什么？

    实际参数是实际传入函数的变量的值，形式参数只是在函数声明或函数定义时指出的传入数据类型。且形式参数的变量名属于被调函数私有。

    答案：形式参数是定义在被调函数中的变量。实际参数是出现在函数调用中的值，该值被赋给形式参数。可以把实际参数视为在函数调用时初始化形式参数的值。


2. 根据下面各函数的描述，分别编写它们的ANSI C函数头，注意，只需写出函数头，不用写出函数体。
    a. donut()接受一个int类型的参数，打印若干（参数指定数目）个0
    b. gear()接受两个int类型的参数，返回int类型的值
    c. guess()不接受参数，返回一个int类型的值
    d. stuff_it()接受一个double类型的值和double类型变量的地址，把第一个值储存在指定位置

    a. void donut(int);
    b. int gear(int, int);
    c. int guess(void);
    d. void stuff_it(double, double *);

    答案：略


3. 根据下面各函数的描述， 分别编写它们的ANSI C函数头。注意，只需写出函数头，不用写出函数体。
    a. n_to_char()接受一个int类型的参数，返回一个char类型的值
    b. digit()接受一个double类型的参数和一个int类型的参数，返回一个int类型的值
    c. which()接受两个可储存double类型变量的地址，返回一个double类型的地址
    d. random()不接受参数，返回一个int类型的值

    a. char n_to_char(int);
    b. int digit(double, int);
    c. double which(double * , double *);
    d. int random(void);

    答案：
    c. double *which(double *p1, double *p2);


4. 设计一个函数，返回两整数之和。

int sum(int a, int b)
{
    return (a + b);
}

    答案：略

5. 如果把复习题4改成返回两个double类型的值之和，应如何修改函数？

double sum(doube a, double b)
{
    return (a + b);
}

6. 设计一个名为alter()的函数，接受两个int类型的变量x和y，把它们的值分别改成两个变量之和以及两变量之差。

int alter(int x, int y)
{
    int *xptr;
    int *yptr;
    int sum;
    int sub;
    xptr = &x;
    yptr = &y;
    *xptr = sum;
    *yptr = sub;
}

答案:
void alter (int *pa, int *pb)                   //题目说的是接受两变量，并未说明接受两变量的地址。傻逼答案。
{
    int temp;
    temp = *pa + *pb;
    *pb = *pa - *pb;
    *pa = temp;
}
或者：
void alter(int * pa, int * pb)
{
    *pa += *pb;
    *pb = *pa - 2 * *pb;
}


7. 下面的函数定义是否正确？
void salami(num)
{
    int num, count;
    for (count = 1; count <= num; num++)
        printf(" O salami mio!\n");
}

不正确，应在函数定义的接受变量列表中指出接受参数的数据类型。可把函数头改为void salami(int num)

8. 编写一个函数，返回3个整数参数中的最大值。
int imax(int a, int b, int c) {return ((a > b ? a : b) > c ? (a>b?a:b) : c);}

9. 给定下面的输出：
Please choose one of the following:
1) copy files           2) move files
3) remove files         4) quit
Enter the number of your choice:

a. 编写一个函数，显示一份有四个选项的菜单，提示用户进行选择（输出如上所示）。
b. 编写一个函数，接受两个int类型的参数分别表示上限和下限。该函数从用户的输入中读取证书。如果整数超出规定上下限，函数再次打印菜单（使用a部分的函数）提示用户输入，然后获取一个新值。如果用户输入的整数在规定范围内，该函数则把该整数返回主调函数，如果用户输入一个非整数字符，该函数应返回4
c. 使用本题a和b部分的函数编写一个最小型的程序。最小型的意思是，该程序不需要实现菜单中各选项的功能，只需要现实这些选项并获取有效的响应即可。

a. 函数如下：
int menu(void)
{
    printf("Please choose one of the following:\n");
    printf("1) copy files\t\t\t2) move files\n3) remove files\t\t\t4) quit\n");
    printf("Enter the number of your choice:\n");
}
b. 函数如下：
int get_choice(int max, int min)
{
    int choice;
    while (scanf("%d", &choice) == 1)
    {
        if (choice > max || choice < min)
        {
            printf("Please enter the right number!\n");
            menu();
            continue;
        }
        else
            return choice;
    }
    return (choice = 4);
}
c. 程序如下：
int main(void)
{
    menu();
    function(get_choice());

    reuturn 0;
}
