1. 下面的程序有什么问题？
    int main(void)
    {
        int * fp;
        int k;

        fp = fopen("gelatin");
        for (k = 0; k < 30; k++)
            fputs(fp, "Nanette eats gelatin.");
        fclose("gelatin");
        return 0;
    }

    问题：
    1) fp是一个整形指针，而不是一个文件指针。
    2) fopen()需要选择文件打开模式。
    3) fclose()函数需要一个文件指针，而不是一个字符串。

    答案：
    根据文件定义，应包含#include <stdio.h>。
    应该把fp声明为文件指针：FILE * fp;
    要给fopen()函数提供一种模式：fopen("gelatin", "w")，或者"a"模式。
    fputs()函数的参数顺序应该反过来。
    输出字符串应该有个换行符，提高可读性。
    fclose()函数需要一个文件指针，而不是一个文件名: fclose(fp);
    下面是修改后的版本：
    #include <stdio.h>
    int main(void)
    {
        FILE * fp;
        int k;
        fp = fopen("gelatin", "w");
        for (k = 0; k < 30; k++)
            fputs("Nanette eats gelatin.\n", fp);
        fclose(fp);
        return 0;
    }


2. 下面的程序完成什么任务？（假设在命令行环境中运行）
    #include <stdio.h>
    #include <stdlib.h>
    #include <ctype.h>

    int main(int argc, char * argv[])
    {
        int ch;
        FILE * fp;
        if (argc < 2)
            exit(EXIT_FAILURE);
        if ((fp = fopen(argv[1], "r")) == NULL)
            exit(EXIT_FAILURE);
        while((ch = getc(fp)) != EOF)
            if (isdigit(ch))
                putchar(ch);
        fclose(fp);

        return 0;
    }

    程序打印以命令行参数（第二个）作为文件名的文件中，所有的数字。

    答案：
    如果可以打开的话，会打开与命令行第1个参数名相同名称的文件，并在屏幕上显示文件中的
    每个数字字符。


3. 假设程序中有下列语句：
    #include <stdio.h>
    FILE * fp1, * fp2;
    char ch;

    fp1 = fopen("terky", "r");
    fp2 = fopen("jerky", "w");
    另外，假设成功打开了两个文件。补全下面函数调用中缺少的参数：
    a. ch = getc();
    b. fprintf( , "%c\n", );
    c. putc( , );
    d. fclose();    //关闭terky文件

    a. ch = getc(fp1);
    b. fprintf(fp2, "%c\n", ch);
    c. putc(ch, fp2);
    d. fclose(fp1);

    答案：
    略。
    fp1用于输入操作，因为它识别以读模式打开的文件。与此类似，fp2以写模式打开文件，所以
    常用于输出操作。


4. 编写一个程序，不接受任何命令行参数或接受一个命令行参数。如果有一个参数，将其解释为
   文件名；如果没有参数，使用标准输入(stdin)作为输入。假设输入完全是浮点数。该程序要
   计算和报告输入数字的算数平均值。

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main(int argc, char * argv[])
{
    int count = 0;
    double total = 0;
    double numbers;

    if (argc > 2 || argc <= 0)
        puts("Wrong");
    else if (argc == 2)
    {
        FILE * fp = fopen(argv[1], "r");
        while (fscanf(fp, "%lf", &numbers) == 1)
        {
            count++;
            total += numbers;
        }
    }
    else
    {
        double numbers;
        int count = 0;
        double total = 0;
        puts("Enter some numbers:");
        while (fscanf(stdin, "%lf", &numbers) == 1)
        {
            count++;
            total += numbers;
            puts("Continue:");
        }
    }
    printf("The average number is %.3f.\n", (total/(double)count));

    return 0;
}

    答案：
    下面是一种方案：
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char * argv[])
{
    FILE * fp;
    double n;
    double sum = 0.0;
    int ct = 0;

    if (argc == 1)
        fp = stdin;
    else if (argc == 2)
    {
        if ((fp = fopen(arg[1], "r")) == NULL)
        {
            fprintf(stderr, "Can't open %s\n", argv[1]);
            exit(EXIT_FAILURE);
        }
    }                                   //此处处理的非常好
    else                                //将fp设置为stdin或者fopen()
    {
        fprintf(stderr, "Usage: %s [filename]\n", argv[0]);
        exit(EXIT_FAILURE);
    }
    while (fscanf(fp, "%lf", &n) == 1)
    {
        sum += n;
        ++ct;
    }
    if (ct > 0)
        printf("Average of %d values = %f\n", ct, sum / ct);
    else 
        printf("No valid data.\n");

    return 0;
}


5. 编写一个程序，接受两个命令行参数。第1个参数是字符，第二个参数是文件名。要求该程序
   只打印文件中包含给定字符的那些行。

#include <stdio.h>
#include <stdlib.h>
#define LINELEN 256

int main(int argc, char * argv[])
{
    if (argc != 3)
        puts("Wrong.");
    else
    {
        FILE * file = fopen(argv[2], "r");
        char tar_ch = *argv[1];
        char temp[LINELEN];
        while ((fgets(temp, LINELEN, file)) == NULL)
        {
            if (strchr(temp, tar_ch))
                puts(temp);
        }
    }
    return 0;
}

6. 二进制文件和文本文件有何区别？二进制流和文本流有何区别？
    二进制文件和文本文件在Unix系统中没有区别，Unix只有一种文件系统，但是在其他环境
    中，例如Windows，文本文件中的一些符号例如'\n'不会被显示出来，但是在二进制文件
    中，以二进制格式保存的数据不会转化为字符显示在屏幕上。
    二进制流是以字节为单位输入或输出，文本流是以字符长度作为单位输入或输出。

7. 
    a. 分别用fprintf()和fwrite()储存8238201有何区别？
    b. 分别用putc()和fwrite()储存字符S有何区别？

    a. fprintf()会将8238201的数值转化为文本（字符）的形式保存
       fwrite()会将8238201用二进制的形式保存。
    b. putc()需要提供两个参数，第一个是'S'，第二个是文件指针
       fwrite()会将字符S的二进制编码保存。

8. 下面语句的区别是什么？
    printf("Hello, %s\n", name);
    fprintf(stdout, "Hello, %s\n", name);
    fprintf(stderr, "Hello, %s\n", name);

    printf()只能将字符串以标准输出的形式将内容打印到屏幕。
    fprintf()的stdout文件输出流是将文本内容以标准输出的形式打印到屏幕，
    stderr标准错误输出是将内容打印到屏幕，但不输出到文件中。

9. "a+", "r+"和"w+"模式打开的文件都是可读写的。哪种模式更适合用来更改文件中已有的内容？
    "r+"模式更适合用来更改文件中已有的内容。此模式可以读写文件。
    "a+"也可读写文件，但是只能从文件末尾增加内容。
    "w+"模式在写入前会将已有内容长度截断为0，然后新增内容。